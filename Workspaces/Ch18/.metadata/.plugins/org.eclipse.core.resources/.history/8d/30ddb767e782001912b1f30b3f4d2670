import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JPanel;

public class ControlPanel extends JPanel implements KeyListener{
	private ImagePanel canvas;
	private String imageFolderPathname;
	private JButton forward, reverse;
	private JComboBox<String> imageList;
	private String[] fileNames, comboBoxNames;
	private int currentIndex;
	public ControlPanel(ImagePanel img)
	{
		File folder = new File(imageFolderPathname);
		fileNames = folder.list(); 
		if(fileNames == null || fileNames.length == 0)
		{
			System.out.println("*** The folder " + 
				imageFolderPathname + " does not exist or is empty ***");
			System.exit(1);
		}
		imageList = new JComboBox<String>();
		JPanel buttons = new JPanel();
		buttons.setLayout(new GridLayout(1,3));
		forward = new JButton();
		reverse = new JButton();
		buttons.add(forward);
		buttons.add(reverse);
		add(imageList);
		forward.addActionListener(new ActionListener()
				{
			public void actionPerformed(ActionEvent e)
			{
				actionPerformed(e);
			}
				});
		reverse.addActionListener(new ActionListener()
				{
				public void actionPerformed(ActionEvent e)
				{
					actionPerformed(e);
				}
			});
		add(buttons, BorderLayout.SOUTH);
		currentIndex = 0;
		canvas.readImage(imageFolderPathname + "/" + fileNames[currentIndex]);
		
	}
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource().equals(forward))
		{
			currentIndex++;
		}
		if(e.getSource().equals(reverse))
		{
			currentIndex--;
		}
		if(e.getSource().equals(imageList))
		{
			currentIndex = imageList.getSelectedIndex();
		}
		imageList.setSelectedIndex(currentIndex);
		canvas.readImage(fileNames[currentIndex]);
		canvas.repaint();
		requestFocus();
		
	}
	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		int b = e.getKeyCode();
		if(b==13 || b==9 || b==39 || b==32)
			currentIndex++;
		if(b==37 || b==38)
			currentIndex--;
		if(b==27)
			System.exit(1);
			
		canvas.repaint();
	}
	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
}
