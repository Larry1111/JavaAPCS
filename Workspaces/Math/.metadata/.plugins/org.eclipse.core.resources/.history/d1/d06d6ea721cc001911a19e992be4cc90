import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class GraphingData extends JPanel {
    int[] data = {
    0, 0, 0, 0, -20, 5, -15, 10, -10, -5, 20, 0, -140, 0, -140, -140, -140, 0, 0, -140, 35, 35, -105, -105, 35, -105, 35, -105, 70, -70, 70, -70, -70, 70, -35, 105, 105, 105, -35, -35, -35, 140, 0, 140, 0, 140, 140, -30, -890, -60, -920, -950, -120, -1010, -830, -860, -890, -60, -90, -950, -120, -800, -30, -890, -60, -920, 60, 30, -860, -30, -890, -920, 90, 60, 30, -830, -860, 150, -710, 90, -800, 30, -860, 215, 185, -675, -705, 95, -765, 65, -795, -645, 155, -705, 95, -765, -585, -645, 185, 305, 275, -615, -645, -675, 155, 335, -555, -585, -615, 215, 185, 365, -495, 335, 275, -615, 215, -645, -430, -460, 370, 310, -550, -580, 430, -460, 340, -550, 460, 430, 400, -460, 340, 520, -340, 460, -400, 370, -310, -370, 460, -430, 400, -460, 580, -310, 460, -400, 430, -430, 585, -275, 555, -305, 645, -215, 585, -305, 705, -155, -185, -215, 555, -305, -125, -155, 645, 615, 765, -95, -125, 705, -185, 645, 615, -65, 765, -125, 705, 675, 830, -30, 800, -60, -90, -120, 890, 860, 830, -120, 920, 30, 830, -60, -90, 90, 890, 830, -30, -60, 120, 950, 920, 860, -30, 90, 920, 60, 30, 860, 0, -5180, -210, -5390, -5810, -840, -1050, -6020, -6230, -5180, -420, -1050, -5180, -630, -5810, -840, -6020, -6230, -210, -5390, -420, -630, -1050, -5180, -210, -5390, -420, -5600, -5810, -6230, -5180, -420, -840, 210, -4970, -5180, -420, -5600, -840, -6020, -210, -5390, -5600, -630, -5810, -6020, 210, 0, -5390, 210, 0, -5180, -210, 210, -4970, 0, -5390, -5810, -840, -4760, 0, -210, -420, -630, 0, -210, -5390, -420, 420, -4970, -5390, -630, -4970, -420, -630, -5810, 420, -4760, 210, -5180, -5600, -5810, -4760, -5390, -420, -4550, 420, -5390, -5600, 420, 210, -4970, 0, -5180, -420, 630, -4760, 210, -5180, 630, -4760, -4970, -5390, -420, -5600, 630, -4760, -5180, -210, -4550, 420, 210, -4970, 0, -5390, 840, 210, 630, -4550, -4760, 0, -4340, 630, -4550, 210, -5390, 840, -4340, 420, 210, 0, -5180, -4340, 630, -5180, -5390, 840, 630, -4550, -4760, -210, 1050, -4130, 840, 630, -4550, -4760, -5180, -4130, -4340, 210, -4970, -5180, -4340, 420, 210, -4970, 420, 1050, -4340, 420, -4760, -4970, 0, 1050, -4760, -5180, 1295, -4305, 455, -4725, -3885, 665, -4725, 245, -4935, 1085, 875, 665, -4515, 455, -4725, -4935, 1085, -4095, 875, 665, -4725, 245, -3885, 875, -4305, 245, -3885, -4305, 665, 455, -4725, 245, -3885, 665, -4515, -4725, 1295, 1085, -4095, -4725, 1295, -4095, -4305, -4515, 1505, -3885, -4305, 1505, -3675, -3885, -4095, 875, -3885, 1085, -4305, 455, -4725, 1295, -3885, 875, 1715, 1505, 1085, -4095, -4305, 1295, -4095, 875, -3465, 665, -4515, 1715, 1295, 1085, -4095, -4515, -3465, 1295, -3885, 875, -3465, 1505, -3675, 1295, 875, -3885, 1085, 875, 1925, 1715, -3465, -3675, 1295, 875, -4305, -3465, 1505, -3885, 1085, -3255, 1715, -3885, -4095, 1505, -4095, 2135, -3045, 1925, -3255, 1715, -4095, 1925, 1505, 1295, -4095, 2135, -3045, -3255, 1715, 1505, -3885, 1085, 1925, -3465, 1505, -3885, 1925, 1715, -3465, -3675, 1085, 2135, 1925, -3675, -4095, 2345, -2835, 1715, 1505, -3675, 2345, -3045, 1715, 1505, 1295, -3255, -3465, 1505, -3885, 1925, -3255, -3465, -2835, 2135, -3255, 1295, -3885, 2345, -3045, 1505, -3675, 2590, 1960, -3220, -3430, 1540, -3640, -2590, 2380, 1960, -3220, 2380, -3430, -2590, 2380, -2800, -3010, -3220, 1750, 1540, -3010, 1960, 1750, -2590, -2800, -3220, 1750, 1540, 2590, -3010, 1960, -3220, -3430, 2380, -2800, 2170, 2800, 1960, -3430, -2380, 2590, -2800, 2170, -3220, 1750, -2380, -2590, 2380, -3010, 1960, -3430, -2380, 2380, 2800, -2590, 2380, -3010, 3010, 2800, -2590, -3220, -2170, -2590, -3010, 1960, 2590, 2380, -2800, -3010, -3220, -2590, 2380, -3010, 2800, 2590, -2590, 2380, -2800, -2170, 2800, 2380, 2170, -2170, 2590, 2380, 2170, 2800, -2800, 2170, -3010, -1960, 3010, 2800, 2590, -2800, -3010, -2170, -2590, -1960, 3010, 2800, -2380, -3010, 3220, 2380, -2800, 3430, -1750, -1960, 3010, 2590, -2590, 3220, 3430, -1960, -2170, -2590, 3220, 3010, -2380, -2800, 3430, -1750, -1960, 2800, 2590, -2800, 3640, -1540, 3010, 2800, 2590, -2590, -1540, 3430, -1960, 3010, -2590, -1750, 3010, 3640, -1540, -1750, -2170, 2800, 2590, 3640, 3430, -2590, -1540, 3010, -2170, 2590, -1295, 3465, 3045, 3675, -1505, 3465, -1715, -1295, -1715, -1925, 3045, -1295, -1505, -1715, 2835, -1295, 3255, -1925, -1715, -1925, -2135, -2345, 3885, 3675, -1505, 3465, 3045, 4095, -1085, 3885, 3675, -2135, -1085, 3885, -1295, -1925, 3045, -2135, -1295, 3675, 3465, -1715, 3675, 3465, 3255, -1925, 4095, -1295, 4095, -1505, 3465, 3255, -1925, 4305, -875, 4095, -1295, 3255, 4305, -875, 3885, -1505, -1715, 3885, -1295, 3675, 3465, 3675, -1505, 3255, -875, -1085, -1295, 3465, 3255, 4305, -875, -1085, 3885, 3675, -1505, -1715, 4515, -875, 4095, -1505, -1715, 3885, -1295, -1715, 4095, -665, -875, 3465, -1715, -1085, 3675, 3465, -1715, -455, 4095, 3885, 3675, -455, 4515, -875, -1295, 4725, -665, 4305, -1085, 3675, 4515, -875, -455, 4515, -665, 4095, 3885, -1295, 4725, 4095, -1295, -1505, -245, 4725, 4515, -875, -1295, 4935, -455, -665, -875, -1085, 4935, 4725, -665, -875, 4095, 3885, 4935, 4725, -665, 4095, 4515, 4305, -245, 4725, 4095, -1085, 5180, -210, 0, 4760, 4130, -1050, 5180, -210, -420, 4550, 4340, -840, -210, 4550, 4130, 4760, -840, -1050, 5180, 4760, 4550, -840, 4130, 210, 5180, 4970, -420, 5390, 210, -630, 4340, 0, 4970, -420, 4550, -840, 4760, -420, 4550, -630, 5390, -210, -420, -630, 4340, 5180, -420, 4340, -840, 420, -630, 5600, 210, 5180, 4970, -210, -420, -630, 5390, 5180, 0, -420, -630, 5390, 4970, -210, 5600, 5180, -210, 210, 0, -420, -630, 5810, 0, 4760, 5390, 0, -210, 5600, 420, 5390, 5180, -210, 5810, 5600, 420, 210, 420, 4970, -420, 5810, 5390, 0, 4970, 840, 5810, 5180, 5600, 4970, 6020, 420, -210, 840, 5810, 5180, 0, -210, 6020, 630, 5390, 0, -210, 840, 5600, 420, 210, 5180, -210, 6230, 5810, 630, 420, 210, 5180, 6020, 840, 5390, 6020, 840, 630, 6230, 1050, 5810, 5600, 420, 5180, 0, 5810, 5600, 420, 6230, 5810, 630, 5600, -2580, -33680, -31280, -32570, -33860, -36440, -31460, -4230, -5520, -36620, -6810, -37910, -34220, -35510, -38090, -2010, -3300, -34400, -36980, -7170, -2190, 180, -33500, -3690, -4980, -32390, -5160, -6450, -31280, -33860, -35150, -5340, -36440, -360, -32750, -34040, -35330, -32930, -5700, -6990, -38090, -2010, -4590, 360, -32030, -2220, -34610, -4800, -35900, -37190, -3690, -4980, -36080, -1290, -32390, -2580, -33680, -6450, -180, -2760, -360, -32750, -34040, -5520, -37910, -540, -6990, -38090, -30560, -750, -3330, -34430, 360, -930, -30920, -33500, -4980, -6270, -31100, -1290, -32390, -6450, -31280, -2760, -36440, -6630, -31460, -4230, -35330, -5520, 720, -570, -34250, -35540, 540, -30560, -2040, -33140, -34430, -5910, 360, -930, -3510, -4800, -35900, -37190, -30920, -2400, -6270, -37370, -3870, -34970, -37550, -180, -32570, -33860, -4050, -36440, -30200, -390, -31490, -5550, 720, -5730, 540, -30560, -2040, -34430, -37010, -30740, -930, -37190, 180, -1110, -32210, -2400, -36080, -31100, -1290, -2580, -34970, -6450, -2580, -5160, 1110, -2760, -4050, -35150, -360, -1650, -32750, -35330, 750, -540, -3120, -34220, -35510, -30530, -31820, -34400, -4590, -30710, -4770, -35870, -6060, -29630, -33500, -4980, -36080, -1290, -32390, -2580, -3870, -31280, -32570, -5340, 930, -360, -32750, -34040, -4230, -36620, 750, -30350, -540, -35510, -5700, -36800, -30530, -31820, -34400, -35690, 360, -32030, -34610, -35900, 180, -30920, -31100, -3870, 1110, -180, -31280, -32570, -2760, -5340, 930, -1650, -35330, -5520, -30350, -1830, -36800, 1830, -750, -2040, -33140, -34430, -30740, -930, -3510, -4800, -35900, -30920, -2400, -3690, 1290, -29810, -31100, -33680, -34970, -5160, -180, -2760, -33860, 930, -360, -34040, -35330, -5520, -29090, -570, -4440, 1830

    };
    final int PAD = 100;
 
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                            RenderingHints.VALUE_ANTIALIAS_ON);
        int w = getWidth();
        int h = getHeight();
        // Draw ordinate.
        g2.draw(new Line2D.Double(PAD, PAD, PAD, h-PAD/2));
        // Draw abcissa.
        g2.draw(new Line2D.Double(PAD, h-PAD, w-PAD, h-PAD));
        double xInc = (double)(w - 2*PAD)/(data.length-1);
        double scale = (double)(h - 2*PAD)/getMax();
        // Mark data points.
        g2.setPaint(Color.red);
        for(int i = 0; i < data.length; i++) {
            double x = PAD + i*xInc;
            double y = h - PAD - scale*data[i];
            g2.fill(new Ellipse2D.Double(x-2, y-2, 4, 4));
        }
    }
 
    private int getMax() {
        int max = -Integer.MAX_VALUE;
        for(int i = 0; i < data.length; i++) {
            if(data[i] > max)
                max = data[i];
        }
        return max;
    }
 
    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new GraphingData());
        f.setSize(400,400);
        f.setLocation(200,200);
        f.setVisible(true);
    }
}