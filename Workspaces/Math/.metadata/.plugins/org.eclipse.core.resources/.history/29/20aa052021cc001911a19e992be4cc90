import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class GraphingData extends JPanel {
    int[] data = {
    0, 2, -2, 2, -8, 0, -8, 8, 0, -26, -6, 6, -26, -6, -14, -26, -6, 14, 26, -6, 38, 26, -80, -128, -48, -80, -24, -128, 24, -80, 24, -80, -32, 24, -56, 0, 24, 80, -24, 0, -48, 80, 24, 80, -24, 104, 80, 80, 48, 104, 0, 24, 80, -398, -338, -278, -434, 18, -138, -242, -78, -338, 18, -302, -138, -242, -78, -18, -278, -114, -146, -302, -78, -18, 114, -206, -146, 78, -242, 78, -182, -18, -278, 174, 18, -86, -242, -18, -50, 114, -206, -86, 242, -78, 146, -174, -114, -138, 242, 278, 122, -138, -78, 78, 242, 302, 42, -114, 18, 182, 242, 302, -18, 146, 338, 78, 242, -78, 78, 138, 302, 206, 174, 18, 242, -18, 278, 18, 242, -240, -72, -1040, -384, 0, -968, -312, -1280, -240, -1040, -1352, 72, -728, -240, -1208, -72, -656, -480, -800, -312, -1280, -240, -1208, -72, -1040, -408, -728, 144, -656, 0, -968, -584, -1064, -240, -1208, -728, -560, 96, -384, 168, -800, -632, -144, -728, -240, -72, -872, -384, -896, 240, -240, -168, -488, 0, -968, -800, -416, 240, -240, -72, -896, 240, -344, 312, -488, -968, -584, 72, -240, -248, -728, -560, -72, 96, 0, -800, -728, 408, -560, -392, 96, 552, -416, 72, -248, -560, -72, 312, -248, -728, -560, 384, 240, -344, 480, -488, 0, -104, -584, 72, -248, 240, 728, 416, -384, 104, 0, 488, -480, -312, -624, -72, 584, 560, 728, -240, -72, 800, -168, 488, -480, 560, -408, -240, 248, -72, -552, 872, 392, -408, 800, 320, 0, 488, 728, -240, 248, -240, 96, 584, 0, 656, 824, 344, 728, 584, 1040, 72, 560, 896, 312, 0, 656, 240, 416, 872, -96, 1040, 72, 560, -240, 312, -168, 0, 72, 560, 240, 728, 480, 0, 656, 824, -144, 1208, 240, 896, 1064, 552, 1040, 240, 1280, 480, 0, 552, 1040, 72, 1208, 408, 384, 872, 240, 728, 1112, 144, 1280, 480, 1352, 1208, -1686, -2654, -4106, -1506, -3434, -1974, -2294, -342, -4214, 54, -2858, -906, -414, -1866, -2186, -3146, -1686, -2474, -3926, -522, -1974, -2078, -3530, -1086, 54, -2858, -1398, -906, -3818, -3326, -3638, -3146, -2654, -1218, -2186, -3638, -2006, -54, -1506, -2474, -342, 54, -2366, 234, -2678, -2186, -726, -234, -2966, -3926, 342, -3530, -1578, -1898, -2858, 234, -2186, -726, -3638, -1686, -258, 234, -2678, -1218, -2186, -3638, -1038, -2006, -546, -54, -1826, -366, -2786, -834, -3746, -438, -2858, -3170, 234, -1218, -2186, -726, -2006, -1506, -1610, -3062, -1110, -618, -3530, -3350, -1398, -3170, -2678, -2186, 726, -1694, -2654, 438, -2474, -1982, -3434, 618, -1406, 54, -2366, -414, -3326, -234, -3146, -1194, 438, -1014, 834, -2078, -1586, 54, -2366, -906, -2186, 234, -2678, 726, -234, 906, -2006, -2966, -2474, 126, -2786, -834, -1406, 54, -2858, 546, 234, -2006, -546, -54, 438, -1014, -1118, -2570, 834, -126, -3038, -1406, 54, -2366, -906, -2186, -726, -1718, -1226, 414, -1514, 1086, -1826, -366, -1334, 126, -2390, -438, 1194, -258, -2678, 726, -2186, -1046, 414, 906, -1514, -54, -150, -2570, 834, -938, -438, 54, -2858, -1718, 234, 726, -726, -1694, -2654, 1398, -1514, 930, -522, -842, 1110, -1310, 1506, 54, 546, -2186, -1694, -234, -2654, 438, -2474, -1982, -1586, -126, -2546, 546, -2366, 1038, -734, -234, -1202, 1686, 1218, -1694, -554, 906, -2006, -1514, -54, 1578, -1334, -342, -914, -1226, 234, -734, -2186, -1694, -234, 906, -2474, 1794, 342, -1586, -446, -1406, 54, 546, 234, -1694, -234, -266, -1718, 726, -2186, 1866, 1398, 126, -2294, -938, 522, -1898, 1506, -266, 1194, -1226, -734, 726, -1046, 414, -2006, -1514, 1302, 522, -1898, 1506, -266, 1686, 234, -2186, -1686, -1194, -1506, -522, 938, 1118, 1610, -1302, 54, -1398, -1866, 2186, -234, 266, 1406, -1506, 1898, -1014, -126, 1334, 374, 1514, -414, 2186, 734, 1226, 1694, -234, 1226, -1686, -546, 914, 1406, 1898, 126, -1326, -342, -438, -906, 554, 1694, -1218, -1686, 914, 1802, -1110, 2294, -618, -126, 1334, 1022, 54, 554, 2654, 234, -1218, 414, 914, 1406, -366, -1326, 2078, -834, 522, 2474, 1022, -1398, 2654, -258, 2186, 734, 1874, -1038, -546, 914, -1506, 2762, -1110, 522, 2474, 2654, -258, 234, -726, 734, 2186, 2678, 1226, -1014, -522, 2570, -342, 1610, 54, 2006, 1046, 1226, 258, 1718, -1194, -522, -618, -126, 1334, 54, 546, -906, 2186, -234, 3146, 234, -546, -54, 438, -1014, 1586, 2078, -834, 2570, 2474, 2966, 54, 1514, 2006, -726, -234, 1226, 906, 438, 1898, -1014, 834, 2294, 2786, -126, 2006, 3146, 1694, 726, 2678, 1194, 1874, -54, 1406, 2546, -366, 3038, 126, 1586, -834, 2474, 2966, 54, 2654, 234, 726, 2366, -546, 2858, 1406, 3434, 522, 2474, 54, 1194, -258, 1694, 2186, 2186, 1218, -234, 3170, 1718, 1398, -54, 3350, 930, 2390, 1110, -342, 3458, 546, -414, 2678, 438, 930, 2786, -126, 54, 2006, 2498, -414, 726, 3170, 1718, 3146, 726, 2186, -234, 1398, 3350, 1578, 3038, 618, 2570, 2474, 54, 726, 2186, 1218, 3818, 2366, 1398, 3350, 3746, 1326, -126, 1014, 2474, 2966, 546, 234, 3638, 1218, -234, 1194, 1686, 3638, 2186, 414, 906, 2366, 2858, 3998, 2546, 126, 2078, 2966, 4106, 726, 2186, 2366, 1398, 4214, 1794, 1014, 2966, 3146, 234, 3638, -6560, -10928, -720, -5088, -8000, -7496, -1656, -2616, -4056, -7280, -11648, -1440, -2400, -936, -8216, -3840, -9176, -4800, -3336, -10616, -720, -9464, -7496, -3120, -6992, -2616, -9896, -5520, -12800, -1224, -9968, -5592, -6560, -720, -12368, -8960, -7496, -3120, -6024, -9248, -3408, -12152, -8744, -11144, -936, -8216, -3840, 216, -8528, -7064, -11432, -5592, -2184, -10928, -8000, -12368, -4584, -1656, -10400, -288, -3192, -8528, -6560, -10928, -8000, -12368, 432, -9752, -1968, -3408, -8744, -7280, -5808, -6128, -1752, -288, -7568, 216, -4152, -7064, -11432, -8000, -3648, -10928, -720, -1680, -8960, -4584, -8456, -4080, -5520, -2904, -2400, -936, -10640, -12080, -8024, -3648, -5088, -6056, -10424, -216, -7496, 288, -6992, -11360, -9896, -1248, -9992, -8528, -4152, -11432, 720, -2184, -10928, -9464, -6056, -1680, -4584, -7496, -3432, -4872, -5840, -10208, 504, -8240, -2400, -936, -9680, -1248, -9992, -2688, 720, -8024, -720, -1680, -10424, -216, -1752, -10496, -8528, -7064, -11432, -6560, -9464, 432, -3936, -6848, -2472, -11216, -10712, -9248, -10208, -4368, -2904, -11648, -6128, -1752, -4656, 720, -10928, -720, -5088, -6560, -3144, -1680, -8960, -9920, -8456, -4080, -6992, 1440, -5840, -10208, -8744, -6776, -3360, -1896, -10640, -4800, 720, 1224, -6056, -1680, -8960, -4584, -5552, -9920, 1656, -2712, -5624, -4152, -5120, -744, -9488, -2184, 1224, -1680, 936, -6344, -10712, -2928, -10208, 0, -2400, -11144, -7088, -2712, 216, -8528, 720, -3648, -8960, -9056, -3216, -1752, -7088, -2712, -5624, -744, -8024, -2184, -5408, -1032, -8312, 936, -7808, -3432, 1440, -2928, -8744, -4688, 1152, -7592, -1752, -10496, -7088, -1248, 216, -4152, 720, -3648, -6560, -10928, -6560, -720, -216, -8960, 1752, -6992, -9896, 312, -4376, -8744, 1464, -5816, -6776, -2400, -5312, -432, 1032, -720, 744, -8000, -216, -7496, -10400, -6992, -2616, -8528

    };
    final int PAD = 100;
 
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                            RenderingHints.VALUE_ANTIALIAS_ON);
        int w = getWidth();
        int h = getHeight();
        // Draw ordinate.
        g2.draw(new Line2D.Double(PAD, PAD, PAD, h-PAD/2));
        // Draw abcissa.
        g2.draw(new Line2D.Double(PAD, h-PAD, w-PAD, h-PAD));
        double xInc = (double)(w - 2*PAD)/(data.length-1);
        double scale = (double)(h - 2*PAD)/getMax();
        // Mark data points.
        g2.setPaint(Color.red);
        for(int i = 0; i < data.length; i++) {
            double x = PAD + i*xInc;
            double y = h - PAD - scale*data[i];
            g2.fill(new Ellipse2D.Double(x-2, y-2, 4, 4));
        }
    }
 
    private int getMax() {
        int max = -Integer.MAX_VALUE;
        for(int i = 0; i < data.length; i++) {
            if(data[i] > max)
                max = data[i];
        }
        return max;
    }
 
    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new GraphingData());
        f.setSize(400,400);
        f.setLocation(200,200);
        f.setVisible(true);
    }
}