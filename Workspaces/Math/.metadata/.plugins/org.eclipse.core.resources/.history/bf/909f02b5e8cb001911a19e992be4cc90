import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class GraphingData extends JPanel {
    int[] data = {
    3, 3, 7, 0, 5, 9, 7, 0, 15, 9, 15, 0, 9, 21, 6, 15, 0, 21, 15, 31, 0, 17, -14, 27, 13, -18, 35, 21, 31, 0, 17, 45, 14, 31, 0, 41, 27, -4, 49, 18, 35, 45, 31, 0, 63, 0, 33, 51, -12, 21, 63, 33, -30, 51, -12, 21, 75, 12, 45, 63, 0, 33, -30, 75, 45, -18, 63, 0, 33, -30, 93, 63, 0, 81, 51, 93, 30, 63, 81, 51, -12, 105, 75, 12, 93, 30, 63, 0, 105, 42, 75, 12, 93, 30, 63, 127, 0, 65, 99, -28, 37, -90, 119, 57, 91, -36, 29, -98, 135, 8, 73, -54, 107, 45, 127, 0, 65, -62, 99, 37, -90, 155, 28, 93, 127, 0, 65, 147, 20, 85, -42, 119, 57, -70, 163, 36, 101, 135, 73, -54, 155, 28, 93, -34, 127, 0, 65, 189, 127, 0, 161, 99, 181, 54, 119, -8, 153, 26, 91, -36, 197, 70, 135, 169, 42, 107, -20, 189, 62, 127, 0, 161, 34, 99, 217, 90, 155, 189, 127, 0, 209, 147, 20, 181, 54, 119, 225, 163, 36, 197, 70, 135, 8, 217, 90, 155, 189, 62, 127, 0, 255, 129, -126, 195, -60, 69, 231, -24, 105, -150, 171, 45, 255, 0, 129, -126, 195, 69, -186, 231, 105, 171, -84, 45, -210, 279, 24, 153, -102, 219, 93, -162, 255, 0, 129, -126, 195, -60, 69, -186, 279, 24, 153, 219, -36, 93, 255, 129, -126, 195, 69, -186, 315, 60, 189, -66, 255, 0, 129, -126, 291, 36, 165, 231, -24, 105, -150, 315, 189, -66, 255, 0, 129, -126, 291, 36, 165, 231, 105, -150, 339, 213, -42, 279, 24, 153, 315, 60, 189, -66, 255, 0, 129, 339, 84, 213, -42, 279, 153, -102, 315, 60, 189, 255, 0, 129, 381, 126, 255, 0, 321, 195, -60, 357, 102, 231, -24, 297, 171, -84, 381, 255, 0, 321, 66, 195, -60, 357, 231, -24, 297, 42, 171, -84, 405, 150, 279, 345, 219, -36, 381, 126, 255, 0, 321, 66, 195, 405, 279, 24, 345, 90, 219, 381, 126, 255, 321, 66, 195, -60, 441, 315, 60, 381, 126, 255, 0, 417, 291, 36, 357, 231, 441, 186, 315, 381, 126, 255, 0, 417, 162, 291, 36, 357, 102, 231, 465, 210, 339, 84, 405, 150, 279, 441, 186, 315, 381, 126, 255, 0, 465, 210, 339, 405, 150, 279, 441, 186, 315, 60, 381, 255, 0, 511, 0, 257, -254, 387, -124, 133, -378, 455, 201, 331, -180, 77, -434, 495, -16, 241, -270, 371, -140, 117, -394, 439, -72, 185, -326, 315, 61, -450, 527, 16, 273, 403, -108, 149, -362, 471, -40, 217, -294, 347, 93, -418, 511, 0, 257, 387, -124, 133, -378, 455, 201, 331, -180, 77, -434, 567, 313, -198, 443, -68, 189, -322, 511, 0, 257, 387, -124, 133, -378, 551, 297, -214, 427, -84, 173, 495, 241, -270, 371, -140, 117, 583, 72, 329, -182, 459, 205, -306, 527, 273, 403, -108, 149, -362, 567, 56, 313, -198, 443, -68, 189, 511, 0, 257, -254, 387, -124, 133, -378, 635, 381, 511, 0, 257, 579, 68, 325, -186, 455, 201, -310, 619, 108, 365, 495, 241, -270, 563, 52, 309, -202, 439, -72, 185, -326, 651, 397, -114, 527, 273, -238, 595, 84, 341, 471, -40, 217, -294, 635, 124, 381, 511, 0, 257, -254, 579, 68, 325, -186, 455, 201, -310, 691, 180, 437, -74, 567, 313, -198, 635, 124, 381, -130, 511, 0, 257, 675, 164, 421, -90, 551, 40, 297, 619, 108, 365, -146, 495, 241, -270, 707, 196, 453, 583, 72, 329, 651, 140, 397, -114, 527, 16, 273, 691, 180, 437, -74, 567, 313, -198, 635, 381, -130, 511, 0, 257, -254, 765, 511, 0, 641, 387, -124, 709, 198, 455, -56, 585, 74, 331, -180, 749, 238, 495, 625, 114, 371, -140, 693, 182, 439, -72, 569, 315, -196, 781, 270, 527, 16, 657, 146, 403, -108, 725, 471, 601, 90, 347, -164, 765, 254, 511, 0, 641, 387, 709, 198, 455, 585, 331, -180, 821, 310, 567, 56, 697, 186, 443, 765, 254, 511, 0, 641, 130, 387, -124, 805, 294, 551, 40, 681, 427, -84, 749, 495, 625, 114, 371, 837, 326, 583, 72, 713, 202, 459, -52, 781, 270, 527, 16, 657, 403, -108, 821, 567, 697, 186, 443, 765, 254, 511, 0, 641, 130, 387, -124, 889, 378, 635, 124, 765, 254, 511, 0, 833, 322, 579, 709, 198, 455, 873, 362, 619, 108, 749, 238, 495, 817, 306, 563, 52, 693, 182, 439, -72, 905, 651, 140, 781, 270, 527, 16, 849, 595, 84, 725, 471, -40, 889, 378, 635, 765, 254, 511, 0, 833, 579, 68, 709, 198, 455, -56, 945, 434, 691, 180, 821, 310, 567, 889, 378, 635, 765, 254, 511, 0, 929, 675, 164, 805, 294, 551, 873, 362, 619, 108, 749, 238, 495, 961, 450, 707, 196, 837, 583, 72

    };
    final int PAD = 20;
 
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                            RenderingHints.VALUE_ANTIALIAS_ON);
        int w = getWidth();
        int h = getHeight();
        // Draw ordinate.
        g2.draw(new Line2D.Double(PAD, PAD, PAD, h-PAD));
        // Draw abcissa.
        g2.draw(new Line2D.Double(PAD, h-PAD, w-PAD, h-PAD));
        double xInc = (double)(w - 2*PAD)/(data.length-1);
        double scale = (double)(h - 2*PAD)/getMax();
        // Mark data points.
        g2.setPaint(Color.red);
        for(int i = 0; i < data.length; i++) {
            double x = PAD + i*xInc;
            double y = h - PAD - scale*data[i];
            g2.fill(new Ellipse2D.Double(x-2, y-2, 4, 4));
        }
    }
 
    private int getMax() {
        int max = -Integer.MAX_VALUE;
        for(int i = 0; i < data.length; i++) {
            if(data[i] > max)
                max = data[i];
        }
        return max;
    }
 
    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new GraphingData());
        f.setSize(400,400);
        f.setLocation(200,200);
        f.setVisible(true);
    }
}