import java.util.ArrayList;

public class CompositeAndBinary {
	private int count = 0, binary;
	private ArrayList<Integer> listY = new ArrayList<Integer>();
	private ArrayList<Integer> listX = new ArrayList<Integer>();
	public int convertBinary(int num)
	{
	    String binary = "";
	    int index = 0;
	    while(num > 0){
	    	binary += num%2;
	    	num = num/2;
	    }
	    return Integer.parseInt(binary);
	}
	public int reverse(int b)
	{
		 StringBuilder input1 = new StringBuilder(); 
		  
	     // append a string into StringBuilder input1 
	     input1.append(b); 
	  
	     // reverse StringBuilder input1 
	     input1 = input1.reverse();
	     return Integer.parseInt(input1.toString());
	}
	public int convertToDecimal(int num)
	{
		 int decimal = 0;  
		 int n = 0;  
		 while(true){  
			 if(num == 0)
			 {  
		     break;  
		     } 
			 else
			 {  
		          int temp = num%10;  
		          decimal += temp*Math.pow(2, n);  
		          num = num/10;  
		          n++;  
		     }  
		  }  
		  return decimal;  
	}  
	public void checkPrime(int n)
	{
		int i,m=0,flag=0;      
		m=n/2;      
		if(n==0||n==1)
		{  
		   //System.out.println(n+" is not prime number");
		}
		else
		{  
		   for(i=2;i<=m;i++)
		   {      
			   if(n%i==0)
			   {      
				   System.out.println(n+" is not prime number");      
				   flag=1;
				   count++;
				   listX.add(count);
				   binary = convertBinary(n);
				   listY.add(n-convertToDecimal(reverse(binary)));
				   break;      
			   }      
		   }      
	}
	}
}
